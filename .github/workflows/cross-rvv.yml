name: RISC-V RVV cross-compilation build
on: [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ matrix.sys.compiler }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    name: 'RISC-V RVV${{ matrix.vector_bits }}'
    strategy:
      matrix:
        sys:
          - { compiler: 'gcc', gcc_runtime: '14'}
          - { compiler: 'clang', version: '17', gcc_runtime: '14'}
          - { compiler: 'clang', version: '18', gcc_runtime: '14'}
        vector_bits:
          - 128
          - 256
          - 512
    steps:
    - name: Setup GCC
      run: |
        sudo apt-get -y -qq update
        sudo apt-get -y -qq --no-install-suggests --no-install-recommends install gcc-${{ matrix.sys.gcc_runtime }}-riscv64-linux-gnu g++-${{ matrix.sys.gcc_runtime }}-riscv64-linux-gnu
        sudo update-alternatives --install /usr/bin/riscv64-linux-gnu-gcc riscv64-linux-gnu-gcc /usr/bin/riscv64-linux-gnu-gcc-${{ matrix.sys.gcc_runtime }} 20
        sudo update-alternatives --install /usr/bin/riscv64-linux-gnu-g++ riscv64-linux-gnu-g++ /usr/bin/riscv64-linux-gnu-g++-${{ matrix.sys.gcc_runtime }} 20
    - name: Setup LLVM
      if: ${{ matrix.sys.compiler == 'clang' }}
      run: |
        # Install given LLVM version
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        chmod u+x llvm.sh
        sudo ./llvm.sh ${{ matrix.sys.version }}
        sudo ln -srf $(which clang-${{ matrix.sys.version }}) /usr/bin/clang
        sudo ln -srf $(which clang++-${{ matrix.sys.version }}) /usr/bin/clang++
        rm llvm.sh
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3.0.0
      with:
        platforms: riscv64
    - name: Setup Ninja
      run: |
        sudo apt-get -y -qq install ninja-build
    - name: Checkout xsimd
      uses: actions/checkout@v3
    - name: Setup
      run: >
        cmake -S . -B _build
        -GNinja
        -DBUILD_TESTS=ON
        -DDOWNLOAD_DOCTEST=ON
        -DCMAKE_BUILD_TYPE=Release
        -DTARGET_ARCH=generic
        -DCMAKE_C_FLAGS="-march=rv64gcv_zvl${{ matrix.vector_bits }}b_zba_zbb_zbs -mrvv-vector-bits=zvl"
        -DCMAKE_CXX_FLAGS="-march=rv64gcv_zvl${{ matrix.vector_bits }}b_zba_zbb_zbs -mrvv-vector-bits=zvl"
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/.github/toolchains/${{ matrix.sys.compiler }}-riscv64-linux-gnu.cmake
    - name: Build
      run: cmake --build _build
    - name: Testing xsimd
      run: >
        QEMU_CPU="rv64,zba=true,zbb=true,zbs=true,v=true,vlen=${{ matrix.vector_bits }},elen=64,vext_spec=v1.0"
        QEMU_LD_PREFIX="/usr/riscv64-linux-gnu"
        ./test/test_xsimd
      working-directory: ${{ github.workspace }}/_build
